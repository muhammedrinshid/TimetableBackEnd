# Generated by Django 4.2.13 on 2024-07-22 05:25

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('school_name', models.CharField(default='Unnamed School', max_length=255)),
                ('school_id', models.CharField(max_length=50, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='school_profiles/')),
                ('working_days', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], max_length=3), blank=True, default=list, size=None)),
                ('teaching_slots', models.PositiveIntegerField(default=0)),
                ('average_students_allowed_in_a_class', models.PositiveIntegerField(blank=True, default=40, null=True)),
                ('period_name', models.CharField(blank=True, default='session', null=True)),
                ('role', models.CharField(blank=True, choices=[('ADMIN', 'Administrator'), ('TEACHER', 'Teacher'), ('STUDENT', 'Student'), ('PARENT', 'Parent'), ('STAFF', 'Staff')], max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('number_of_students', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('room_number', models.CharField(blank=True, max_length=10, null=True)),
                ('class_id', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('division', models.CharField(max_length=10)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classrooms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Classroom',
                'verbose_name_plural': 'Classrooms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassSubject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('lessons_per_week', models.IntegerField(default=1)),
                ('elective_or_core', models.BooleanField(default=False)),
                ('class_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_subjects', to='base.classroom')),
            ],
            options={
                'verbose_name': 'Class Subject',
                'verbose_name_plural': 'Class Subjects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grade',
                'verbose_name_plural': 'Grades',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('min_lessons_per_week', models.PositiveIntegerField()),
                ('max_lessons_per_week', models.PositiveIntegerField()),
                ('teacher_id', models.CharField(max_length=20, null=True, unique=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='teacher_profiles/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grades', models.ManyToManyField(related_name='teachers', to='base.grade')),
                ('qualified_subjects', models.ManyToManyField(related_name='qualified_teachers', to='base.subject')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standards', to='base.grade')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ElectiveGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electivegroups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Elective Group',
                'verbose_name_plural': 'Elective Groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassSubjectSubject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('number_of_students', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('assigned_teachers', models.ManyToManyField(related_name='class_subject_subjects', to='base.teacher')),
                ('class_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_subjects', to='base.classsubject')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_subject_subjects', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.subject')),
            ],
            options={
                'verbose_name': 'Class Subject Subject',
                'verbose_name_plural': 'Class Subject Subjects',
                'ordering': ['class_subject', 'subject'],
            },
        ),
        migrations.AddField(
            model_name='classsubject',
            name='elective_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_subjects', to='base.electivegroup'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_subjects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='subjects',
            field=models.ManyToManyField(related_name='class_subjects', through='base.ClassSubjectSubject', to='base.subject'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='standard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classrooms', to='base.standard'),
        ),
        migrations.AddConstraint(
            model_name='teacher',
            constraint=models.CheckConstraint(check=models.Q(('min_lessons_per_week__lte', models.F('max_lessons_per_week'))), name='min_lessons_lte_max_lessons'),
        ),
        migrations.AddConstraint(
            model_name='classroom',
            constraint=models.UniqueConstraint(fields=('standard', 'division'), name='unique_standard_division'),
        ),
    ]
